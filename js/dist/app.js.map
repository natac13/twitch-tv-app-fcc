{"version":3,"sources":["../src/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(() => {\n\n\n    angular.module('Twitty', [])\n\n    .controller('StreamController', [ '$scope', '$http', ($scope, $http) => {\n        const streams = ['freecodecamp', 'storbeck', 'terakilobyte', 'medrybw',\n        'habathcx', 'RobotCaleb', 'thomasballinger', 'noobs2ninjas', 'beohoff',\n        'brunofin', 'comster404'];\n        const twitchUrl = 'https://api.twitch.tv/kraken/';\n\n        $scope.test = 'test string';\n        $scope.users = [];\n        $scope.online = [];\n        $scope.offline = [];\n/**\n * I wanted to use two controllers but was not able to figure out how to share\n * the filter object properly\n */\n\n        // this will filter out the online or offline users during .activate()\n        $scope.filter = {};\n        $scope.navItems = [\n            {\n                name: 'all',\n                active: true\n            },\n            {\n                name: 'online',\n                active: false\n            },\n            {\n                name: 'offline',\n                active: false\n            }\n        ];\n\n        $scope.activate = (index) => {\n            angular.forEach($scope.navItems, (obj) => { obj.active = false; });\n            $scope.navItems[index].active = true;\n            if($scope.navItems[index].name === 'online') {\n                $scope.filter = {status:true};\n            }else if($scope.navItems[index].name === 'offline') {\n                $scope.filter = {status:false};\n            } else{\n                $scope.filter = {};\n            }\n        };\n\n        streams.forEach((stream) => {\n            // build a user object for each streamer\n            let user = {};\n            user.url = 'http://www.twitch.tv/' + stream;\n\n            $http.get(twitchUrl + 'streams/' + stream)\n            .then((response) => {\n                // .then() success\n                user.account = true;\n                if(response.data.stream) {\n                    // online\n                    user.status = true;\n                } else {\n                    user.status = false;\n                }\n\n            }, (response) => {\n                // .then() fails\n                user.account = false;\n            });\n\n            $http.get(twitchUrl + 'users/' + stream)\n            .then((response) =>{\n                user.displayName = response.data.display_name;\n                user.bio = response.data.bio || 'This user has no bio, sorry';\n                user.logo = response.data.logo;\n\n            });\n            $scope.users.push(user);\n            user.status ? $scope.online.push(user) :\n                $scope.offline.push(user);\n        });\n\n    }]);\n\n    // $(document).ready(function() {\n    //     $('#filters').on('click', 'a', function (e) {\n    //         e.preventDefault();\n    //         $(this).closest('#filters').find('.active').removeClass('active');\n    //         $(this).parent().addClass('active');\n    //     });\n    // });\n\n})();"]}